diff --git a/BUILD b/BUILD
index 5797eabff4..f7621d1d51 100644
--- a/BUILD
+++ b/BUILD
@@ -15,6 +15,8 @@ licenses(["notice"])  # Apache 2
 
 envoy_py_namespace()
 
+exports_files(["VERSION"])
+
 alias(
     name = "ios_xcframework",
     actual = "//library/swift:Envoy",
diff --git a/docs/BUILD b/docs/BUILD
index 18aa51e276..9c8b5f80f6 100644
--- a/docs/BUILD
+++ b/docs/BUILD
@@ -64,10 +64,42 @@ pkg_tar(
 )
 
 genrule(
-    name = "docs",
-    outs = ["docs.tar.gz"],
+    name = "html_release",
+    outs = ["html_release.tar.gz"],
+    cmd = """
+    . $(location @envoy//bazel:volatile_env) \
+    && VERSION_NUMBER="$$(cat $(location //:VERSION))" \
+    && export ENVOY_BLOB_SHA=$${BUILD_SHA:-$${ENVOY_BUILD_SCM_REVISION:-$${{BUILD_SCM_REVISION}}} \
+    && export ENVOY_DOCS_VERSION_STRING="$${VERSION_NUMBER}"-"$${ENVOY_BLOB_SHA:0:6}" \
+    && export ENVOY_DOCS_RELEASE_LEVEL=pre-release \
+    && mkdir -p build \
+    && tar xf $(location :rst) -C build \
+    && $(location :sphinx) \
+         -W \
+         --keep-going \
+         -b html \
+         build \
+         output \
+    && tar czf $@ -C output .
+    """,
+    stamp = 1,
+    tools = [
+        ":rst",
+        ":sphinx",
+        "//:VERSION",
+        "@envoy//bazel:volatile_env",
+    ],
+)
+
+genrule(
+    name = "html",
+    outs = ["html.tar.gz"],
     cmd = """
     mkdir -p build \
+    && VERSION_NUMBER="$$(cat $(location //:VERSION))" \
+    && export ENVOY_BLOB_SHA="$${BUILD_SHA:-UNKNOWN}" \
+    && export ENVOY_DOCS_VERSION_STRING="$${VERSION_NUMBER}"-"$${ENVOY_BLOB_SHA:0:6}" \
+    && export ENVOY_DOCS_RELEASE_LEVEL=pre-release \
     && tar xf $(location :rst) -C build \
     && $(location :sphinx) \
          -W \
@@ -80,5 +112,11 @@ genrule(
     tools = [
         ":rst",
         ":sphinx",
+        "//:VERSION",
     ],
 )
+
+alias(
+    name = "docs",
+    actual = ":html_release",
+)
diff --git a/docs/build.sh b/docs/build.sh
index a45286c397..5e86fd5471 100755
--- a/docs/build.sh
+++ b/docs/build.sh
@@ -19,16 +19,9 @@ then
   # Check the version_history.rst contains current release version.
   grep --fixed-strings "$VERSION_NUMBER" docs/root/intro/version_history.rst \
     || (echo "Git tag not found in version_history.rst" && exit 1)
-
-  # Now that we now there is a match, we can use the tag.
-  export ENVOY_DOCS_VERSION_STRING="tag-$GITHUB_REF_NAME"
-  export ENVOY_DOCS_RELEASE_LEVEL=tagged
-  export ENVOY_BLOB_SHA="$GITHUB_REF_NAME"
+  DOCS_TARGET=//docs
 else
-  BUILD_SHA=$(git rev-parse HEAD)
-  export ENVOY_DOCS_VERSION_STRING="${VERSION_NUMBER}"-"${BUILD_SHA:0:6}"
-  export ENVOY_DOCS_RELEASE_LEVEL=pre-release
-  export ENVOY_BLOB_SHA="$BUILD_SHA"
+  DOCS_TARGET=//docs:html
 fi
 
 [[ -z "${DOCS_OUTPUT_DIR}" ]] && DOCS_OUTPUT_DIR=generated/docs
@@ -37,10 +30,6 @@ rm -rf "${DOCS_OUTPUT_DIR}"
 mkdir -p "${DOCS_OUTPUT_DIR}"
 DOCS_OUTPUT_DIR="$(realpath "$DOCS_OUTPUT_DIR")"
 
-./bazelw build \
-      --action_env=ENVOY_BLOB_SHA \
-      --action_env=ENVOY_DOCS_RELEASE_LEVEL \
-      --action_env=ENVOY_DOCS_VERSION_STRING \
-      //docs
+./bazelw build "$DOCS_TARGET"
 
-tar xf bazel-bin/docs/docs.tar.gz -C "$DOCS_OUTPUT_DIR" .
+tar xf bazel-bin/docs/html.tar.gz -C "$DOCS_OUTPUT_DIR" .
diff --git a/docs/conf.py b/docs/conf.py
index d1b09cf5a7..9dbeba35fc 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -48,11 +48,11 @@ def setup(app):
     app.add_directive('substitution-code-block', SubstitutionCodeBlock)
 
 
-if not os.environ.get('ENVOY_DOCS_RELEASE_LEVEL'):
+if not (release_level := os.environ.get('ENVOY_DOCS_RELEASE_LEVEL')):
     raise Exception("ENVOY_DOCS_RELEASE_LEVEL env var must be defined")
 
-release_level = os.environ['ENVOY_DOCS_RELEASE_LEVEL']
-blob_sha = os.environ['ENVOY_BLOB_SHA']
+if not (blob_sha := os.environ.get("ENVOY_BLOB_SHA")):
+    raise Exception("ENVOY_BLOB_SHA env var must be defined")
 
 # If extensions (or modules to document with autodoc) are in another directory,
 # add these directories to sys.path here. If the directory is relative to the
@@ -103,13 +103,12 @@ copyright = u'{} {}'.format(datetime.now().year, author)
 # |version| and |release|, also used in various other places throughout the
 # built documents.
 
-if not os.environ.get('ENVOY_DOCS_VERSION_STRING'):
+# The short X.Y version.
+if not (version := os.environ.get("ENVOY_DOCS_VERSION_STRING")):
     raise Exception("ENVOY_DOCS_VERSION_STRING env var must be defined")
 
-# The short X.Y version.
-version = os.environ['ENVOY_DOCS_VERSION_STRING']
 # The full version, including alpha/beta/rc tags.
-release = os.environ['ENVOY_DOCS_VERSION_STRING']
+release = version
 
 # The language for content autogenerated by Sphinx. Refer to documentation
 # for a list of supported languages.
